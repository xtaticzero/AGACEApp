package mx.gob.sat.siat.ws.empleado.repository;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import mx.gob.sat.siat.ws.empleado.bean.EmpleadoCompletoXml;
import mx.gob.sat.siat.ws.empleado.bean.EmpleadoXml;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.6 in JDK 6 Generated
 * source version: 2.1
 *
 */
@WebServiceClient(name = "ServicioEmpleado", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://99.90.29.85/ServicioFEIEmpleado/ServicioEmpleado.svc?wsdl")
public class ServicioEmpleado
        extends Service {

    private final static URL SERVICIOEMPLEADO_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(mx.gob.sat.siat.ws.empleado.repository.ServicioEmpleado.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = mx.gob.sat.siat.ws.empleado.repository.ServicioEmpleado.class.getResource(".");
            url = new URL(baseUrl, "http://99.90.29.85/ServicioFEIEmpleado/ServicioEmpleado.svc?wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://99.90.29.85/ServicioFEIEmpleado/ServicioEmpleado.svc?wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        SERVICIOEMPLEADO_WSDL_LOCATION = url;
    }

    public ServicioEmpleado(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ServicioEmpleado() {
        super(SERVICIOEMPLEADO_WSDL_LOCATION, new QName("http://tempuri.org/", "ServicioEmpleado"));
    }

    /**
     *
     * @return returns EmpleadoClientRepository
     */
    @WebEndpoint(name = "BasicHttpBinding_IServicioEmpleado")
    public EmpleadoClientRepository getBasicHttpBindingIServicioEmpleado() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IServicioEmpleado"), EmpleadoClientRepository.class);
    }

    /**
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
     * configure on the proxy. Supported features not in the
     * <code>features</code> parameter will have their default values.
     * @return returns EmpleadoClientRepository
     */
    @WebEndpoint(name = "BasicHttpBinding_IServicioEmpleado")
    public EmpleadoClientRepository getBasicHttpBindingIServicioEmpleado(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IServicioEmpleado"), EmpleadoClientRepository.class, features);
    }

    public static void main(String[] args) {

        try {
            ServicioEmpleado se = new ServicioEmpleado();
            EmpleadoClientRepository ise = se.getBasicHttpBindingIServicioEmpleado();

            EmpleadoCompletoXml empleadoXml = ise.getEmpleadoCompleto(32, "AUGY800716AJ4", null);

            System.out.println(empleadoXml.getEmpleado().getValue().getNombre().getValue());
            System.out.println(empleadoXml.getEmpleado().getValue().getAdmGral().getValue());
            System.out.println(empleadoXml.getEmpleado().getValue().getIdAdmGral());

        } catch (Exception e) {
            System.err.println("Error en el servicio" + e.getMessage());
            System.err.println(e);
        }

    }

}
